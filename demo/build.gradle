apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion ANDROID_BUILD_SDK_VERSION as int

    defaultConfig {
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        multiDexEnabled true

        ndk {
//            abiFilters "armeabi"
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
        disable "InvalidPackage"
        lintConfig file("lint.xml")
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'LICENSE'
        exclude 'NOTICE'
    }

    signingConfigs {
        // gradle assembleRelease
        release {
            storeFile file(BGA_KEYSTORE_PATH)
            storePassword BGA_KEYSTORE_PASSWORD
            keyAlias BGA_KEYSTORE_ALIAS
            keyPassword BGA_KEYSTORE_ALIAS_PASSWORD
        }
    }

    buildTypes {
        release {
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'release') {
                    variant.outputs.all {
                        def apkName = "app_v${variant.versionName}"
                        if (!variant.flavorName.isEmpty()) {
                            apkName += "_${variant.flavorName}"
                        }
                        outputFileName = apkName + ".apk"
                    }
                }
            }
        }
        debug {
            zipAlignEnabled false
            shrinkResources false
            debuggable true
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':scaffold')

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'


    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
}